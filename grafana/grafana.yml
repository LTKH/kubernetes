---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - name: web
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: grafana
  sessionAffinity: None

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:8.1.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: password
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yml
              name: grafana-volume
              subPath: datasources.yml
            - mountPath: /etc/grafana/provisioning/notifiers/notifiers.yml
              name: grafana-volume
              subPath: notifiers.yml
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards
              #subPath: dashboards.yml
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc 
        - name: grafana-volume
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards
          hostPath:
            path: /Users/dmitry/Documents/github/kubernetes/grafana/provisioning/dashboards
            type: Directory
        #- name: grafana-dashboards
        #  configMap:
        #    name: grafana-dashboards-1

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: default
data:
  datasources.yml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        isDefault: true
        url: http://vmselect.default.svc.cluster.local:8481/select/0/prometheus
  notifiers.yml: |-
    apiVersion: 1
    notifiers:
      - name: Alertmanager
        type: prometheus-alertmanager
        uid: notifier01
        settings:
          url: http://alertmanager.default.svc.cluster.local:9093

#---
#apiVersion: kustomize.config.k8s.io/v1
#kind: Kustomization
#configMapGenerator:
#  - name: grafana-dashboards-1
#    files:
#      - ./grafana/provisioning/dashboards/dashboards.yml
#      - ./grafana/provisioning/dashboards/prometheus-alertmanager_rev1.json