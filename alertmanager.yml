---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
spec:
  selector:
    app: alertmanager
  ports:
    - name: alertmanager
      protocol: TCP
      port: 9093
      targetPort: 9093

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  labels:
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  strategy:
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: alertmanager
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: alertmanager
          image: bitnami/alertmanager:latest
          resources:
            requests:
              cpu: "0.05"
              memory: "50Mi"
              ephemeral-storage: "100Mi"
            limits:
              cpu: "0.10"
              memory: "100Mi"
              ephemeral-storage: "200Mi"
          imagePullPolicy: Always
          ports:
            - containerPort: 9093
          args:
            - '--config.file=/alertmanager-conf/alertmanager.yml'
          volumeMounts:
            - mountPath: /alertmanager-conf
              name: alertmanager-volume
      volumes:
        - name: alertmanager-volume
          configMap:
            name: alertmanager-configuration

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-configuration
  namespace: default
data:
  alertmanager.yml: |-
    global:
      resolve_timeout: 5m
    route:
      group_by:
        - alertname
      group_interval: 1m
      group_wait: 10s
      receiver: alerttrap
      repeat_interval: 1m
      routes:
        - match_re: 
            alertname: ^.*$
          receiver: alerttrap
    receivers:
      - name: alerttrap
        webhook_configs:
          - url: http://alerttrap.default.svc.cluster.local:8000/api/v1/alerts
    inhibit_rules:
      - source_matchers: [severity="critical"]
        target_matchers: [severity="warning"]
        equal: ['alertname','host','node','namespace','pod','instance']