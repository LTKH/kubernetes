---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmagent
  labels:
    app: vmagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vmagent
  strategy:
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: vmagent
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      containers:
        - name: vmagent
          image: victoriametrics/vmagent:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8429
          args:
            - '-remoteWrite.url=http://vminsert.default.svc.cluster.local:8480/insert/0/prometheus'
            - '-promscrape.config=/vmagent-conf/prometheus.yml'
          volumeMounts:
            - mountPath: /vmagent-conf
              name: config-volume
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-configuration
        #- name: vmagent-volume
        #  hostPath:
        #    path: /home/monit/volumes/vmagent
        #    type: Directory

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configuration
  namespace: default
data:
  prometheus.yml: |-
    scrape_configs:
      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            regex: '^(kube-system)$'
            action: drop
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
